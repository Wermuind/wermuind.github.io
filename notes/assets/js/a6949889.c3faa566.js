"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[5771],{7284:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var a=t(5893),o=t(1151);const s={},r="\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0446\u0432\u0435\u0442\u043e\u043c",d={id:"code/ts/colors",title:"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0446\u0432\u0435\u0442\u043e\u043c",description:"",source:"@site/notes/code/ts/colors.md",sourceDirName:"code/ts",slug:"/code/ts/colors",permalink:"/notes/code/ts/colors",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f",permalink:"/notes/code/ts/regex"},next:{title:"SQL",permalink:"/notes/code/sql/"}},i={},c=[];function l(e){const n={code:"code",h1:"h1",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"\u0440\u0430\u0431\u043e\u0442\u0430-\u0441-\u0446\u0432\u0435\u0442\u043e\u043c",children:"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0446\u0432\u0435\u0442\u043e\u043c"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"type RGBA = [number, number, number, number];\n\n/** \u041d\u0430\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0446\u0432\u0435\u0442 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439.\n * @example\n * overlayColor([0, 0, 0, 0.5], [255, 255, 255, 0.5]) => [170, 170, 170, 0.75]\n * */\nfunction overlayColor(base: RGBA, additive: RGBA): RGBA {\n  const baseAlpha = base[3];\n  const addedAlpha = additive[3];\n  if (!baseAlpha) return additive;\n  if (!addedAlpha) return base;\n\n  const alpha = 1 - (1 - addedAlpha) * (1 - baseAlpha);\n  const additiveWeight = addedAlpha / alpha;\n  const baseWeight = baseAlpha * (1 - baseAlpha) / alpha;\n\n  const red   = Math.round(additive[0] * additiveWeight + base[0] * baseWeight);\n  const green = Math.round(additive[1] * additiveWeight + base[1] * baseWeight);\n  const blue  = Math.round(additive[2] * additiveWeight + base[2] * baseWeight);\n\n  return [red, green, blue, alpha];\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>r});var a=t(7294);const o={},s=a.createContext(o);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);